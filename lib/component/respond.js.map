{"version":3,"sources":["../../src/component/respond.es6"],"names":[],"mappings":";;;;;;;;;;sBAA6B,WAAW;;IAA5B,KAAK;;qBACY,UAAU;;yBACjB,aAAa;;;;qBACZ,UAAU;;AAEjC,MAAM,gBAAgB,gCAAmB;AACxC,YAAW,CAAC,MAAM,EAAE,SAAS,EAAE;AAC9B,OAAK,CAAC,MAAM,CAAC,CAAC;;AAEd,MAAI,CAAC,SAAS,GAAG,SAAS,CAAC;EAC3B;;AAED,QAAO,CAAC,OAAO,EAAE;AAChB,MAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;EACxG;;AAED,WAAU,CAAC,OAAO,EAAE;;;AAGnB,MAAI,CAAC,MAAM,CAAC,OAAO,CACjB,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,UAAU,MAAM,EAAE;AAAE,UAAO,MAAM,CAAC,GAAG,CAAA;GAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CACzF,OAAO,CAAC,UAAU,MAAM,EAAE;AAC1B,SAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;GACrC,CAAC,CAAC;;AAEJ,MAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;AAC7D,SAAM,EAAE;AACP,UAAM,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;AAChC,QAAI,EAAI,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE;IAChC;GACD,CAAC,CAAC;EACH;;AAED,SAAQ,GAAG,EAEV;;AAED,UAAS,CAAC,OAAO,EAAE;AAClB,MAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;EAC5F;;AAED,aAAY,GAAG,EAEd;;AAED,iBAAgB,CAAC,OAAO,EAAE;AACzB,MAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,kBAAkB,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;EAC7I;;AAED,iBAAgB,GAAG,EAElB;;AAED,eAAc,GAAG,EAEhB;;AAED,aAAY,CAAC,OAAO,EAAE;AACrB,MAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;EACrF;CACD;;qBAEc,gBAAgB","file":"respond.js","sourcesContent":["import * as EVENT       from '../events';\nimport { debug }        from '../debug';\nimport Component from './component';\nimport { typeOf } from '../utils';\n\nclass RespondComponent extends Component {\n\tconstructor(client, namespace) {\n\t\tsuper(client);\n\n\t\tthis.namespace = namespace;\n\t}\n\n\tnewChat(options) {\n\t\tthis.namespace.emit(this.client.eventName(EVENT.NEW_CHAT), { result: { data: options.chat.toJSON() } });\n\t}\n\n\tnewMessage(options) {\n\t\t// TODO: change\n\n\t\tthis.client.members\n\t\t\t.get(options.chat.get('members').map(function (member) { return member._id }).map(String))\n\t\t\t.forEach(function (member) {\n\t\t\t\tmember.join(String(options.chat._id))\n\t\t\t});\n\n\t\tthis.namespace.emit(this.client.eventName(EVENT.NEW_MESSAGE), {\n\t\t\tresult: {\n\t\t\t\tchatId: String(options.chat._id),\n\t\t\t\tdata:   options.message.toJSON()\n\t\t\t}\n\t\t});\n\t}\n\n\tfindChat() {\n\n\t}\n\n\tfindChats(options) {\n\t\tthis.namespace.emit(this.client.eventName(EVENT.FIND_CHATS), { result: { data: options } });\n\t}\n\n\tfindMessages() {\n\n\t}\n\n\tfindLastMessages(options) {\n\t\tthis.namespace.emit(this.client.eventName(EVENT.FIND_LAST_MESSAGES), { result: { chatId: String(options.chatId), data: options.messages } });\n\t}\n\n\tfindFromMessages() {\n\n\t}\n\n\tfindAtMessages() {\n\n\t}\n\n\twriteMessage(options) {\n\t\tthis.namespace.emit(this.client.eventName(EVENT.WRITE_MESSAGE), { result: options });\n\t}\n}\n\nexport default RespondComponent;"]}