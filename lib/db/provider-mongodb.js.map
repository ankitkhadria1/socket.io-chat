{"version":3,"sources":["../../src/db/provider-mongodb.es6"],"names":[],"mappings":"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","file":"provider-mongodb.js","sourcesContent":["import ObjectID         from 'bson-objectid';\nimport { debug }        from '../debug';\nimport QueryResolver    from './queryResolver';\nimport Provider         from './provider';\n\nexport default class ProviderMongodb extends Provider {\n\tconstructor(db) {\n\t\tsuper();\n\n\t\tObject.defineProperties(this, {\n\t\t\t_db: {\n\t\t\t\twritable:   true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue:      db\n\t\t\t}\n\t\t});\n\t}\n\n\tcollection(Model) {\n\t\treturn new QueryResolver(this, Model);\n\t}\n\n\tinsert(dbCursor) {\n\t\tlet cursor = this._db.collection(dbCursor.queryResolver.Model.collection());\n\n\t\tdbCursor.__data._id = new ObjectID();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tcursor.insert(dbCursor.__data, function (err, result) {\n\t\t\t\terr ? reject(err) : resolve(result);\n\n\t\t\t});\n\t\t});\n\t}\n\n\tupdate(dbCursor) {\n\t\tlet cursor = this._db.collection(dbCursor.queryResolver.Model.collection());\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tcursor.udpate(dbCursor.__query, dbCursor.__updateQuery, dbCursor.__options, function (err, result) {\n\t\t\t\terr ? reject(err) : resolve(result);\n\t\t\t});\n\t\t});\n\t}\n\n\tfind(dbCursor, options) {\n\t\tlet castResult = (res) => {\n\t\t\treturn options.lean ? res : (res && dbCursor.queryResolver.Model.fill(res));\n\t\t};\n\n\t\tlet cursor = this._db.collection(dbCursor.queryResolver.Model.collection());\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (dbCursor.__next || dbCursor.__prev) {\n\t\t\t\tif (!dbCursor.__query.$and) {\n\t\t\t\t\tdbCursor.__query.$and = [];\n\t\t\t\t}\n\n\t\t\t\tdbCursor.__next && dbCursor.__query.$and.push({ _id: { $gt: dbCursor.__next } });\n\t\t\t\tdbCursor.__prev && dbCursor.__query.$and.push({ _id: { $lt: dbCursor.__prev } });\n\t\t\t}\n\n\t\t\tcursor = cursor.find(dbCursor.__query);\n\n\t\t\tdbCursor.__sort && cursor.sort(this.__sort);\n\t\t\tdbCursor.__skip && cursor.skip(this.__skip);\n\t\t\tdbCursor.__limit && cursor.limit(this.__limit);\n\n\t\t\tcursor.toArray((err, result) => {\n\t\t\t\treturn err ? reject(err) : resolve(result.map(castResult));\n\t\t\t});\n\t\t});\n\t}\n\n\tfindOne(dbCursor) {\n\t\tlet cursor = this._db.collection(dbCursor.__Model.collection());\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tcursor.findOne(this.__query, (err, result) => {\n\t\t\t\treturn err ? reject(err) : resolve(castResult(result));\n\t\t\t});\n\t\t});\n\n\t}\n}"]}