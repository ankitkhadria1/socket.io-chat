{"version":3,"sources":["../src/schema.es6"],"names":[],"mappings":"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","file":"schema.js","sourcesContent":["import fs        from 'fs';\nimport path      from 'path';\nimport _         from 'underscore';\nimport { debug } from './debug';\n\nvar slice = Array.prototype.slice;\n\n// TODO: cache model props (defaults/index/readOnly/propPaths)\n\nclass SchemaLoader {\n\tstatic load(schemaName) {\n\t\tlet schemaPath = path.join(__dirname, '..', 'schema', schemaName + '.json');\n\t\tlet schemaJSON = fs.readFileSync(path.resolve(schemaPath));\n\n\t\tlet mockSchema = { properties: {} };\n\n\t\tif (schemaJSON) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(schemaJSON);\n\t\t\t} catch (e) {\n\t\t\t\tdebug('fail parse schema: ' + schemaName);\n\n\t\t\t}\n\t\t} else {\n\t\t\tdebug('fail load schema: ' + schemaName);\n\t\t}\n\t\treturn mockSchema;\n\t}\n\n\tstatic defaults(schema) {\n\t\tvar output = {};\n\n\t\tvar walker = function (props, output) {\n\t\t\t_.each(props, function (prop, key) {\n\t\t\t\tif (prop.properties) {\n\t\t\t\t\toutput[key] = {};\n\t\t\t\t}\n\n\t\t\t\tif (prop.default) {\n\t\t\t\t\tif (_.isObject(prop.default) && prop.default.type) {\n\n\t\t\t\t\t\toutput[key] = prop.default.value\n\t\t\t\t\t\t\t? global[prop.default.type](prop.default.value)\n\t\t\t\t\t\t\t: global[prop.default.type]();\n\n\t\t\t\t\t} else if (_.isString(prop.default)) {\n\t\t\t\t\t\toutput[key] = ~['null', 'undefined'].indexOf(prop.default)\n\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t: new global[prop.default]();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (prop.properties) {\n\t\t\t\t\twalker(prop.properties, output[key]);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\twalker(schema.properties, output);\n\n\t\treturn output;\n\t}\n\n\tstatic index(schema) {\n\t\tlet list            = [],\n\t\t\titerations      = 0,\n\t\t\tlimitIterations = 200;\n\n\t\tlet walker = function (props, path = []) {\n\t\t\tif (iterations > limitIterations) {\n\t\t\t\tthrow new Error('recursive walk schema for index')\n\t\t\t}\n\n\t\t\t_.each(props, function (prop, key) {\n\t\t\t\tif (prop.index) {\n\t\t\t\t\t// TODO: if nested properties?\n\t\t\t\t\tpath.push(key);\n\t\t\t\t\tlist.push({\n\t\t\t\t\t\t[path.join('.')]: prop.index\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif (prop.properties) {\n\t\t\t\t\tpath.push(key);\n\t\t\t\t\titerations++;\n\t\t\t\t\twalker(prop.properties, path)\n\t\t\t\t}\n\n\t\t\t\tif (prop.items && prop.items.properties) {\n\t\t\t\t\tpath.push(key);\n\t\t\t\t\titerations++;\n\t\t\t\t\twalker(prop.items.properties, path);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\twalker(schema.properties);\n\n\t\treturn list;\n\t}\n\n\tstatic readOnly(schema) {\n\t\tlet paths = [];\n\n\t\tvar walker = function (schema, path) {\n\t\t\tif (!schema.type) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswitch (schema.type.toLowerCase()) {\n\t\t\t\tcase 'object':\n\t\t\t\t\tfor (let prop in schema.properties) {\n\t\t\t\t\t\tif (!schema.properties.hasOwnProperty(prop)) continue;\n\n\t\t\t\t\t\tlet locPath = Array.prototype.slice.call(path || []);\n\t\t\t\t\t\tlocPath.push(prop);\n\t\t\t\t\t\tschema.properties[prop].readonly && paths.push(locPath.join('.'));\n\t\t\t\t\t\twalker(schema.properties[prop], locPath);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'array':\n\t\t\t\t\tlet locPath = Array.prototype.slice.call(path || []);\n\t\t\t\t\tschema.readonly && paths.push(locPath.join('.'));\n\t\t\t\t\twalker(schema.items, locPath);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: {\n\t\t\t\t\tlet locPath = Array.prototype.slice.call(path || []);\n\t\t\t\t\tschema.readonly && paths.push(locPath.join('.'));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\twalker(schema);\n\n\t\treturn paths;\n\t}\n\n\tstatic propPaths(schema) {\n\t\tlet paths = [];\n\n\t\tvar walker = function (schema, path) {\n\t\t\tif (!schema.type) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswitch (schema.type.toLowerCase()) {\n\t\t\t\tcase 'object':\n\t\t\t\t\tfor (let prop in schema.properties) {\n\t\t\t\t\t\tif (!schema.properties.hasOwnProperty(prop)) continue;\n\n\t\t\t\t\t\tlet locPath = slice.call(path || []);\n\t\t\t\t\t\tlocPath.push(prop);\n\n\t\t\t\t\t\tpaths.push(locPath.join('.'));\n\n\t\t\t\t\t\twalker(schema.properties[prop], locPath);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'array':\n\t\t\t\t\twalker(schema.items, slice.call(path || []));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\n\t\twalker(schema);\n\n\t\treturn paths;\n\t}\n}\n\nexport default SchemaLoader;"]}